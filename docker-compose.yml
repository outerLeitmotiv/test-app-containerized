version: '3.8'

services:
  db:
    image: postgres:16
    container_name: postgres_db
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  webhook:
    build:
      context: ./backend-app
      dockerfile: dockerfile
    container_name: webhook
    ports:
      - "5000:5000"
    environment:
      - DATABASE_URI=${DATABASE_URI}
      - SECRET_KEY=${SECRET_KEY}
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped

  view:
    build:
      context: ./frontend-app
      dockerfile: dockerfile
    container_name: view
    ports:
      - "8080:80"
    networks:
      - app-network
    depends_on:
      - webhook
    restart: unless-stopped

  cadvisor:
      image: gcr.io/cadvisor/cadvisor:v0.47.2
      container_name: cadvisor
      volumes:
        - /:/rootfs:ro         
        - /var/run:/var/run:ro  
        - /sys:/sys:ro         
        - /var/lib/docker/:/var/lib/docker:ro  
      ports:
        - "8081:8080"          
      networks:
        - app-network        
      restart: unless-stopped
  
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - app-network
    restart: unless-stopped
      
networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16

volumes:
  postgres_data:
    driver: local